/* CIF PROCESS (150, 150), (150, 75) */
PROCESS basic;
/* CIF TEXT (176, -127), (198, 140) */
-- Declare your variables
DCL i Int;
DCL f Float;
DCL b Bool;
/* CIF ENDTEXT */
/* CIF START (-86, -394), (100, 50) */
START;
/* CIF TASK (-102, -323), (133, 50) */
TASK i := 1;
/* CIF TASK (-84, -258), (97, 35) */
TASK b := false;
/* CIF TASK (-75, -208), (78, 35) */
TASK f := 1.0;
/* CIF NEXTSTATE (-86, -158), (100, 50) */
NEXTSTATE Wait;

/* CIF STATE (-86, -158), (100, 50) */
STATE Wait;
/* CIF INPUT (-85, -88), (100, 50) */
INPUT run;
/* CIF TASK (-170, -23), (271, 35) */
TASK i := ((i + 1) -  (1 mod 1)) * 1 / 1 + 1 rem 1;
/* CIF TASK (-202, 27), (335, 35) */
TASK f := (f + 3.0 - (2.0 mod 1.0)) * 2.0 / 2.0 + 1.0 rem 1.0;
/* CIF TASK (-156, 77), (243, 35) */
TASK b := (b or false) and true xor false;
/* CIF TASK (-242, 127), (414, 35) */
TASK b := 1 < 2 and 2 <= 2 and 2 >= 1 and 2 >= 2 and 1 = 1 and 1 /= 1;
/* CIF TASK (-302, 177), (535, 35) */
TASK b := 1.0 < 2.0 and 2.0 <= 2.0 and 2.0 >= 1.0 and 2.0 >= 2.0 and 1.0 = 1.0 and 1.0 /= 1.0;
/* CIF NEXTSTATE (-85, 227), (100, 50) */
NEXTSTATE Wait;
ENDSTATE;
ENDPROCESS basic;