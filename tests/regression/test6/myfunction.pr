/* CIF PROCESS (148, 150), (150, 75) */
PROCESS myfunction;
    /* CIF TEXT (0, 17), (271, 323) */
    -- Timers defined in the interface view
-- Use SET_TIMER (value, timer name)
-- and RESET_TIMER (timer name) in a
-- PROCEDURE CALL symbol to use them



DCL toto T_Int32;

TIMER myTimer;

-- Test default value for a complex type
DCL def_val MySeq := { a 3, b taste };

-- To test power, fix, float
dcl someReal MyReal := 1.5;
dcl someInt t_uInt8 := 2;

-- To test 'op_not'
dcl opnot T_boolean := not true;
    /* CIF ENDTEXT */
    /* CIF PROCEDURE (891, 490), (91, 35) */
    PROCEDURE factorial;
        /* CIF TEXT (29, 42), (215, 48) */
        fpar in N MyInteger, 
          in/out result MyInteger;
        /* CIF ENDTEXT */
        /* CIF START (298, 33), (70, 35) */
        START;
            /* CIF TASK (284, 83), (97, 35) */
            TASK result := 1;
            /* CIF TASK (223, 133), (220, 53) */
            TASK for x in range(1, n+1):
    result := (result * x) mod 255
endfor;
            /* CIF RETURN (315, 201), (35, 35) */
            RETURN ;
    ENDPROCEDURE;
    /* CIF START (591, 0), (100, 50) */
    START;
        /* CIF DECISION (516, 65), (250, 50) */
        DECISION someint = 5 and then somereal=1.1
or else someint = 6;
                /* CIF ANSWER (561, 135), (70, 23) */
                (true):
                /* CIF ANSWER (651, 135), (70, 23) */
                (false):
        ENDDECISION;
        /* CIF NEXTSTATE (591, 183), (100, 50) */
        NEXTSTATE Wait;
    /* CIF STATE (591, 183), (100, 50) */
    STATE Wait;
        /* CIF INPUT (810, 253), (100, 50) */
        INPUT mytimer;
            /* CIF PROCEDURECALL (792, 318), (135, 50) */
            CALL writeln
('timer expired');
            /* CIF PROCEDURECALL (780, 383), (160, 35) */
            CALL factorial(3, someint);
            /* CIF NEXTSTATE (810, 433), (100, 50) */
            NEXTSTATE Wait;
        /* CIF INPUT (450, 253), (198, 50) */
        INPUT start_something (toto);
            /* CIF OUTPUT (414, 318), (270, 50) */
            OUTPUT result_data((toto+1) mod 2147483647);
            /* CIF PROCEDURECALL (474, 383), (150, 50) */
            CALL writeln
('Hello Toto', toto);
            /* CIF PROCEDURECALL (483, 448), (132, 50) */
            CALL set_timer
(1000, myTimer);
            /* CIF TASK (391, 513), (316, 35) */
            TASK someReal := power(someReal, someInt mod 1);
            /* CIF PROCEDURECALL (379, 563), (340, 35) */
            CALL writeln('1.5 ** 2 == ', someReal, ' (should be 2.25 )');
            /* CIF TASK (448, 613), (201, 35) */
            TASK someReal := float(someInt);
            /* CIF TASK (428, 663), (241, 35) */
            TASK someInt := fix(someReal) mod 255;
            /* CIF TASK (473, 713), (152, 35) */
            TASK opnot := not opnot;
            /* CIF TASK (470, 763), (157, 35) */
            TASK someint := -someint;
            /* CIF TASK (467, 813), (164, 35) */
            TASK someint := (-8) mod 5;
            /* CIF NEXTSTATE (498, 863), (102, 50) */
            NEXTSTATE wait;
    ENDSTATE;
ENDPROCESS myfunction;