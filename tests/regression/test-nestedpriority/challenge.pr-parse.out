[INFO] Starting to parse model test-nestedpriority/challenge.pr
[ERROR] Failed to parse model.
    org.antlr.v4.runtime.misc.ParseCancellationException: line 85:8 no viable alternative at input '/* CIF PROCEDURE (104, 101), (70, 35) */\n                    PROCEDURE exit;\n                        /* CIF START (198, 116), (70, 35) */\n                        START;\n                            /* CIF PROCEDURECALL (142, 166), (181, 35) */\n                            CALL writeln('exit nested_1');\n                            /* CIF RETURN (215, 216), (35, 35) */\n                            RETURN ;\n                    ENDPROCEDURE;\n                    /* CIF PROCEDURE (110, 183), (74, 35) */\n                    PROCEDURE entry;\n                        /* CIF START (105, 54), (70, 35) */\n                        START;\n                            /* CIF PROCEDURECALL (34, 104), (210, 35) */\n                            CALL writeln('entering nested_1');\n                            /* CIF RETURN (122, 154), (35, 35) */\n                            RETURN ;\n                    ENDPROCEDURE;\n                    /* CIF START (245, 55), (70, 35) */\n                    START;\n                        /* CIF NEXTSTATE (233, 105), (93, 35) */\n                        NEXTSTATE nested_2;\n                    /* CIF STATE (276, 165), (93, 35) */\n                    STATE nested_2;\n                        /* CIF INPUT (287, 220), (70, 35) */\n                        INPUT run;\n                            /* CIF PROCEDURECALL (263, 270), (118, 35) */\n                            CALL writeln('OK');\n                            /* CIF NEXTSTATE (287, 320), (70, 35) */\n                            NEXTSTATE -;\n                    ENDSTATE;\n            ENDSUBSTRUCTURE;\n            /* CIF PROCEDURE (334, 58), (70, 35) */\n            PROCEDURE exit;\n                /* CIF START (76, 53), (70, 35) */\n                START;\n                    /* CIF PROCEDURECALL (27, 103), (167, 35) */\n                    CALL writeln('exit nested');\n                    /* CIF RETURN (93, 153), (35, 35) */\n                    RETURN ;\n            ENDPROCEDURE;\n            /* CIF PROCEDURE (340, 134), (74, 35) */\n            PROCEDURE entry;\n                /* CIF START (121, 85), (70, 35) */\n                START;\n                    /* CIF PROCEDURECALL (57, 135), (196, 35) */\n                    CALL writeln('entering nested');\n                    /* CIF RETURN (138, 185), (35, 35) */\n                    RETURN ;\n            ENDPROCEDURE;\n            /* CIF START (136, 68), (70, 35) */\n            START;\n                /* CIF NEXTSTATE (124, 118), (93, 35) */\n                NEXTSTATE nested_1;\n            /* CIF STATE (124, 118), (93, 35) */\n            STATE nested_1;\n                /* CIF INPUT (130, 173), (80, 35) */\n                INPUT go_off;\n                    /* CIF RETURN (152, 223), (35, 35) */\n                    RETURN ;\n            ENDSTATE;\n    ENDSUBSTRUCTURE;\n    /* CIF START (92, 76), (68, 37) */\n    START;\n        /* CIF NEXTSTATE (86, 128), (79, 35) */\n        NEXTSTATE nested;\n    /* CIF STATE (389, 131), (70, 35) */\n    STATE well;\n    ENDSTATE;\n    /* CIF STATE (86, 128), (79, 35) */\n    STATE nested;\n        /* CIF INPUT (145, 183), (70, 35) */\n        INPUT run;\n            /* CIF PROCEDURECALL (105, 233), (149, 35) */\n            CALL writeln('FAIL');\n            /* CIF NEXTSTATE (145, 283), (70, 35) */\n            NEXTSTATE -;\n        /* CIF CONNECT (51, 183), (0, 35) */\n        CONNECT'
org.antlr.v4.runtime.misc.ParseCancellationException: line 85:8 no viable alternative at input '/* CIF PROCEDURE (104, 101), (70, 35) */\n                    PROCEDURE exit;\n                        /* CIF START (198, 116), (70, 35) */\n                        START;\n                            /* CIF PROCEDURECALL (142, 166), (181, 35) */\n                            CALL writeln('exit nested_1');\n                            /* CIF RETURN (215, 216), (35, 35) */\n                            RETURN ;\n                    ENDPROCEDURE;\n                    /* CIF PROCEDURE (110, 183), (74, 35) */\n                    PROCEDURE entry;\n                        /* CIF START (105, 54), (70, 35) */\n                        START;\n                            /* CIF PROCEDURECALL (34, 104), (210, 35) */\n                            CALL writeln('entering nested_1');\n                            /* CIF RETURN (122, 154), (35, 35) */\n                            RETURN ;\n                    ENDPROCEDURE;\n                    /* CIF START (245, 55), (70, 35) */\n                    START;\n                        /* CIF NEXTSTATE (233, 105), (93, 35) */\n                        NEXTSTATE nested_2;\n                    /* CIF STATE (276, 165), (93, 35) */\n                    STATE nested_2;\n                        /* CIF INPUT (287, 220), (70, 35) */\n                        INPUT run;\n                            /* CIF PROCEDURECALL (263, 270), (118, 35) */\n                            CALL writeln('OK');\n                            /* CIF NEXTSTATE (287, 320), (70, 35) */\n                            NEXTSTATE -;\n                    ENDSTATE;\n            ENDSUBSTRUCTURE;\n            /* CIF PROCEDURE (334, 58), (70, 35) */\n            PROCEDURE exit;\n                /* CIF START (76, 53), (70, 35) */\n                START;\n                    /* CIF PROCEDURECALL (27, 103), (167, 35) */\n                    CALL writeln('exit nested');\n                    /* CIF RETURN (93, 153), (35, 35) */\n                    RETURN ;\n            ENDPROCEDURE;\n            /* CIF PROCEDURE (340, 134), (74, 35) */\n            PROCEDURE entry;\n                /* CIF START (121, 85), (70, 35) */\n                START;\n                    /* CIF PROCEDURECALL (57, 135), (196, 35) */\n                    CALL writeln('entering nested');\n                    /* CIF RETURN (138, 185), (35, 35) */\n                    RETURN ;\n            ENDPROCEDURE;\n            /* CIF START (136, 68), (70, 35) */\n            START;\n                /* CIF NEXTSTATE (124, 118), (93, 35) */\n                NEXTSTATE nested_1;\n            /* CIF STATE (124, 118), (93, 35) */\n            STATE nested_1;\n                /* CIF INPUT (130, 173), (80, 35) */\n                INPUT go_off;\n                    /* CIF RETURN (152, 223), (35, 35) */\n                    RETURN ;\n            ENDSTATE;\n    ENDSUBSTRUCTURE;\n    /* CIF START (92, 76), (68, 37) */\n    START;\n        /* CIF NEXTSTATE (86, 128), (79, 35) */\n        NEXTSTATE nested;\n    /* CIF STATE (389, 131), (70, 35) */\n    STATE well;\n    ENDSTATE;\n    /* CIF STATE (86, 128), (79, 35) */\n    STATE nested;\n        /* CIF INPUT (145, 183), (70, 35) */\n        INPUT run;\n            /* CIF PROCEDURECALL (105, 233), (149, 35) */\n            CALL writeln('FAIL');\n            /* CIF NEXTSTATE (145, 283), (70, 35) */\n            NEXTSTATE -;\n        /* CIF CONNECT (51, 183), (0, 35) */\n        CONNECT'
	at ee.ibk.sdl.parser.ThrowingErrorListener.syntaxError(ThrowingErrorListener.java:18)
	at org.antlr.v4.runtime.ProxyErrorListener.syntaxError(ProxyErrorListener.java:41)
	at org.antlr.v4.runtime.Parser.notifyErrorListeners(Parser.java:544)
	at org.antlr.v4.runtime.DefaultErrorStrategy.reportNoViableAlternative(DefaultErrorStrategy.java:282)
	at org.antlr.v4.runtime.DefaultErrorStrategy.reportError(DefaultErrorStrategy.java:121)
	at ee.ibk.sdl.parser.grammar.SDLParser.composite_state_body(SDLParser.java:4593)
	at ee.ibk.sdl.parser.grammar.SDLParser.composite_state_graph(SDLParser.java:3827)
	at ee.ibk.sdl.parser.grammar.SDLParser.composite_state(SDLParser.java:3676)
	at ee.ibk.sdl.parser.grammar.SDLParser.process_definition(SDLParser.java:1288)
	at ee.ibk.sdl.parser.grammar.SDLParser.pr_file(SDLParser.java:309)
	at ee.ibk.sdl.parser.SDLParserMain.doParse(SDLParserMain.java:40)
	at ee.ibk.sdl.parser.SDLParserMain.parseFile(SDLParserMain.java:72)
	at ee.ibk.sdl.parser.SDLParserMain.main(SDLParserMain.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader.main(JarRsrcLoader.java:58)
