[INFO] Starting to parse model test-branchcoverage2/myfunction.pr
[ERROR] Failed to parse model.
    org.antlr.v4.runtime.misc.ParseCancellationException: line 4:4 mismatched input '-- Test the branch coverage checker in decision answers\n    /* CIF ENDTEXT */\n    /* CIF TEXT (78, 142), (282, 268) */\n    dcl var6 T_Real := 5.0;\n\ndcl varbool T_Boolean := false;\n    /* CIF ENDTEXT */\n    /* CIF START (525, 71), (70, 35) */\n    START;\n        /* CIF DECISION (511, 121), (98, 50) */\n        DECISION varbool\n        /* CIF COMMENT (629, 128), (262, 35) */\n        COMMENT 'check branch false is missing';\n                /* CIF ANSWER (484, 198), (73, 28) */\n                (true):\n        ENDDECISION;\n        /* CIF DECISION (511, 241), (98, 50) */\n        DECISION varbool\n        /* CIF COMMENT (629, 248), (262, 35) */\n        COMMENT 'check there is no error';\n                /* CIF ANSWER (439, 318), (73, 28) */\n                (true):\n                /* CIF ANSWER (531, 311), (71, 28) */\n                else:\n        ENDDECISION;\n        /* CIF DECISION (511, 375), (98, 50) */\n        DECISION varbool\n        /* CIF COMMENT (629, 382), (262, 35) */\n        COMMENT 'check there is no error';\n                /* CIF ANSWER (439, 452), (73, 28) */\n                (true):\n                /* CIF ANSWER (527, 445), (78, 28) */\n                (false):\n        ENDDECISION;\n        /* CIF DECISION (511, 509), (98, 50) */\n        DECISION varbool\n        /* CIF COMMENT (629, 516), (322, 48) */\n        COMMENT 'check else is missing\nand mix of true and varbool is not ok';\n                /* CIF ANSWER (412, 579), (73, 28) */\n                (true):\n                /* CIF ANSWER (495, 579), (98, 28) */\n                (varbool):\n        ENDDECISION;\n        /* CIF DECISION (511, 622), (98, 50) */\n        DECISION varbool\n        /* CIF COMMENT (629, 629), (322, 48) */\n        COMMENT 'check else is missing\nand mix of true and varbool is not ok';\n                /* CIF ANSWER (367, 692), (73, 28) */\n                (true):\n                /* CIF ANSWER (450, 692), (98, 28) */\n                (varbool):\n                /* CIF ANSWER (567, 692), (71, 28) */\n                else:\n        ENDDECISION;\n        /* CIF DECISION (523, 735), (73, 50) */\n        DECISION var6\n        /* CIF COMMENT (616, 742), (217, 35) */\n        COMMENT 'check there is no error';\n                /* CIF ANSWER (590, 805), (82, 28) */\n                (<10.0):\n                /* CIF ANSWER (440, 805), (92, 28) */\n                (>=10.0):\n        ENDDECISION;\n        /* CIF DECISION (523, 848), (73, 50) */\n        DECISION var6\n        /* CIF COMMENT (616, 855), (279, 35) */\n        COMMENT 'check there is value 10 missing';\n                /* CIF ANSWER (590, 918), (82, 28) */\n                (<10.0):\n                /* CIF ANSWER (440, 918), (92, 28) */\n                (>10.0):\n        ENDDECISION;\n        /* CIF DECISION (523, 961), (73, 50) */\n        DECISION var6\n        /* CIF COMMENT (616, 968), (314, 35) */\n        COMMENT 'check there is value 10 overlapping';\n                /* CIF ANSWER (585, 1031), (92, 28) */\n                (<=10.0):\n                /* CIF ANSWER (440, 1031), (92, 28) */\n                (>=10.0):\n        ENDDECISION;\n        /* CIF DECISION (523, 1074), (73, 50) */\n        DECISION var6\n        /* CIF COMMENT (616, 1081), (314, 35) */\n        COMMENT 'check missing range ]10.0;10.5[';\n                /* CIF ANSWER (585, 1144), (92, 28) */\n                (<=10.0):\n                /* CIF ANSWER (440, 1144), (92, 28) */\n                (>=10.5):\n        ENDDECISION;\n        /* CIF DECISION (523, 1187), (73, 50) */\n        DECISION var6\n        /* CIF COMMENT (616, 1194), (324, 35) */\n        COMMENT 'check there is no error (close range)';\n                /* CIF ANSWER (496, 1257), (116, 28) */\n                (-5.0:100.0):\n        ENDDECISION;\n        /* CIF DECISION (523, 1300), (73, 50) */\n        DECISION var6\n        /* CIF COMMENT (616, 1307), (390, 48) */\n        COMMENT 'check unreachable branch and missing range';\n                /* CIF ANSWER (585, 1370), (92, 28) */\n                (>10.0):\n                /* CIF ANSWER (427, 1370), (118, 28) */\n                (-10.0:-5.0):\n        ENDDECISION;\n        /* CIF DECISION (523, 1413), (73, 50) */\n        DECISION var6\n        /* CIF COMMENT (615, 1421), (432, 48) */\n        COMMENT 'check missing range 0:0.1 and unrechable 100:150';\n                /* CIF ANSWER (576, 1483), (110, 28) */\n                (0.1:150.0):\n                /* CIF ANSWER (427, 1483), (118, 28) */\n                (-5.0:0.0):\n        ENDDECISION;\n        /* CIF NEXTSTATE (525, 1526), (70, 35) */\n        NEXTSTATE wait;\n    /* CIF STATE (360, 356), (70, 35) */\n    STATE wait;\n    ENDSTATE;\n' expecting PROCESS
org.antlr.v4.runtime.misc.ParseCancellationException: line 4:4 mismatched input '-- Test the branch coverage checker in decision answers\n    /* CIF ENDTEXT */\n    /* CIF TEXT (78, 142), (282, 268) */\n    dcl var6 T_Real := 5.0;\n\ndcl varbool T_Boolean := false;\n    /* CIF ENDTEXT */\n    /* CIF START (525, 71), (70, 35) */\n    START;\n        /* CIF DECISION (511, 121), (98, 50) */\n        DECISION varbool\n        /* CIF COMMENT (629, 128), (262, 35) */\n        COMMENT 'check branch false is missing';\n                /* CIF ANSWER (484, 198), (73, 28) */\n                (true):\n        ENDDECISION;\n        /* CIF DECISION (511, 241), (98, 50) */\n        DECISION varbool\n        /* CIF COMMENT (629, 248), (262, 35) */\n        COMMENT 'check there is no error';\n                /* CIF ANSWER (439, 318), (73, 28) */\n                (true):\n                /* CIF ANSWER (531, 311), (71, 28) */\n                else:\n        ENDDECISION;\n        /* CIF DECISION (511, 375), (98, 50) */\n        DECISION varbool\n        /* CIF COMMENT (629, 382), (262, 35) */\n        COMMENT 'check there is no error';\n                /* CIF ANSWER (439, 452), (73, 28) */\n                (true):\n                /* CIF ANSWER (527, 445), (78, 28) */\n                (false):\n        ENDDECISION;\n        /* CIF DECISION (511, 509), (98, 50) */\n        DECISION varbool\n        /* CIF COMMENT (629, 516), (322, 48) */\n        COMMENT 'check else is missing\nand mix of true and varbool is not ok';\n                /* CIF ANSWER (412, 579), (73, 28) */\n                (true):\n                /* CIF ANSWER (495, 579), (98, 28) */\n                (varbool):\n        ENDDECISION;\n        /* CIF DECISION (511, 622), (98, 50) */\n        DECISION varbool\n        /* CIF COMMENT (629, 629), (322, 48) */\n        COMMENT 'check else is missing\nand mix of true and varbool is not ok';\n                /* CIF ANSWER (367, 692), (73, 28) */\n                (true):\n                /* CIF ANSWER (450, 692), (98, 28) */\n                (varbool):\n                /* CIF ANSWER (567, 692), (71, 28) */\n                else:\n        ENDDECISION;\n        /* CIF DECISION (523, 735), (73, 50) */\n        DECISION var6\n        /* CIF COMMENT (616, 742), (217, 35) */\n        COMMENT 'check there is no error';\n                /* CIF ANSWER (590, 805), (82, 28) */\n                (<10.0):\n                /* CIF ANSWER (440, 805), (92, 28) */\n                (>=10.0):\n        ENDDECISION;\n        /* CIF DECISION (523, 848), (73, 50) */\n        DECISION var6\n        /* CIF COMMENT (616, 855), (279, 35) */\n        COMMENT 'check there is value 10 missing';\n                /* CIF ANSWER (590, 918), (82, 28) */\n                (<10.0):\n                /* CIF ANSWER (440, 918), (92, 28) */\n                (>10.0):\n        ENDDECISION;\n        /* CIF DECISION (523, 961), (73, 50) */\n        DECISION var6\n        /* CIF COMMENT (616, 968), (314, 35) */\n        COMMENT 'check there is value 10 overlapping';\n                /* CIF ANSWER (585, 1031), (92, 28) */\n                (<=10.0):\n                /* CIF ANSWER (440, 1031), (92, 28) */\n                (>=10.0):\n        ENDDECISION;\n        /* CIF DECISION (523, 1074), (73, 50) */\n        DECISION var6\n        /* CIF COMMENT (616, 1081), (314, 35) */\n        COMMENT 'check missing range ]10.0;10.5[';\n                /* CIF ANSWER (585, 1144), (92, 28) */\n                (<=10.0):\n                /* CIF ANSWER (440, 1144), (92, 28) */\n                (>=10.5):\n        ENDDECISION;\n        /* CIF DECISION (523, 1187), (73, 50) */\n        DECISION var6\n        /* CIF COMMENT (616, 1194), (324, 35) */\n        COMMENT 'check there is no error (close range)';\n                /* CIF ANSWER (496, 1257), (116, 28) */\n                (-5.0:100.0):\n        ENDDECISION;\n        /* CIF DECISION (523, 1300), (73, 50) */\n        DECISION var6\n        /* CIF COMMENT (616, 1307), (390, 48) */\n        COMMENT 'check unreachable branch and missing range';\n                /* CIF ANSWER (585, 1370), (92, 28) */\n                (>10.0):\n                /* CIF ANSWER (427, 1370), (118, 28) */\n                (-10.0:-5.0):\n        ENDDECISION;\n        /* CIF DECISION (523, 1413), (73, 50) */\n        DECISION var6\n        /* CIF COMMENT (615, 1421), (432, 48) */\n        COMMENT 'check missing range 0:0.1 and unrechable 100:150';\n                /* CIF ANSWER (576, 1483), (110, 28) */\n                (0.1:150.0):\n                /* CIF ANSWER (427, 1483), (118, 28) */\n                (-5.0:0.0):\n        ENDDECISION;\n        /* CIF NEXTSTATE (525, 1526), (70, 35) */\n        NEXTSTATE wait;\n    /* CIF STATE (360, 356), (70, 35) */\n    STATE wait;\n    ENDSTATE;\n' expecting PROCESS
	at ee.ibk.sdl.parser.ThrowingErrorListener.syntaxError(ThrowingErrorListener.java:18)
	at org.antlr.v4.runtime.ProxyErrorListener.syntaxError(ProxyErrorListener.java:41)
	at org.antlr.v4.runtime.Parser.notifyErrorListeners(Parser.java:544)
	at org.antlr.v4.runtime.DefaultErrorStrategy.reportInputMismatch(DefaultErrorStrategy.java:299)
	at org.antlr.v4.runtime.DefaultErrorStrategy.reportError(DefaultErrorStrategy.java:124)
	at ee.ibk.sdl.parser.grammar.SDLParser.process_definition(SDLParser.java:1352)
	at ee.ibk.sdl.parser.grammar.SDLParser.pr_file(SDLParser.java:309)
	at ee.ibk.sdl.parser.SDLParserMain.doParse(SDLParserMain.java:40)
	at ee.ibk.sdl.parser.SDLParserMain.parseFile(SDLParserMain.java:72)
	at ee.ibk.sdl.parser.SDLParserMain.main(SDLParserMain.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader.main(JarRsrcLoader.java:58)
