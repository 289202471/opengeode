/* CIF PROCESS (152, 148), (150, 75) */
PROCESS sequences;
    /* CIF TEXT (373, 97), (303, 168) */
    -- Declare your variables

-- Syntax: DCL <variable name> <type name>;

DCL p1 Point;
DCL p2 Point;
DCL l1 List;
DCL l2 List;
DCL nested Nested;
    /* CIF ENDTEXT */
    /* CIF START (0, 0), (70, 35) */
    START;
        /* CIF TASK (-25, 50), (121, 35) */
        TASK p1 := {x 1, y 2};
        /* CIF TASK (-15, 100), (100, 35) */
        TASK p2 := p1;
        /* CIF TASK (-22, 150), (115, 35) */
        TASK l1 := {5, 6};
        /* CIF TASK (-3, 200), (77, 35) */
        TASK l2 := l1;
        /* CIF TASK (-98, 250), (267, 35) */
        TASK nested := {a {b {c {p {x 1, y 2}, l {3, 4}}}}};
        /* CIF NEXTSTATE (0, 300), (70, 35) */
        NEXTSTATE Wait;
    /* CIF STATE (0, 300), (70, 35) */
    STATE Wait;
        /* CIF INPUT (0, 355), (70, 35) */
        INPUT run;
            /* CIF PROCEDURECALL (-24, 405), (119, 35) */
            CALL writeln(p1!x)
            /* CIF COMMENT (114, 405), (70, 35) */
            COMMENT '1';
            /* CIF PROCEDURECALL (-24, 455), (118, 35) */
            CALL writeln(p1!y)
            /* CIF COMMENT (114, 455), (70, 35) */
            COMMENT '2';
            /* CIF PROCEDURECALL (-24, 505), (119, 35) */
            CALL writeln(p2!x)
            /* CIF COMMENT (114, 505), (70, 35) */
            COMMENT '1';
            /* CIF PROCEDURECALL (-24, 555), (118, 35) */
            CALL writeln(p2!y)
            /* CIF COMMENT (114, 555), (70, 35) */
            COMMENT '2';
            /* CIF PROCEDURECALL (-33, 605), (137, 35) */
            CALL writeln(p1 = p2)
            /* CIF COMMENT (123, 605), (71, 35) */
            COMMENT 'TRUE';
            /* CIF PROCEDURECALL (-36, 655), (142, 35) */
            CALL writeln(p1 /= p2)
            /* CIF COMMENT (126, 655), (75, 35) */
            COMMENT 'FALSE';
            /* CIF TASK (-9, 705), (88, 35) */
            TASK p1!x := 3;
            /* CIF TASK (-9, 755), (88, 35) */
            TASK p1!y := 4;
            /* CIF PROCEDURECALL (-24, 805), (119, 35) */
            CALL writeln(p1!x)
            /* CIF COMMENT (113, 805), (70, 35) */
            COMMENT '3';
            /* CIF PROCEDURECALL (-24, 855), (118, 35) */
            CALL writeln(p1!y)
            /* CIF COMMENT (114, 855), (70, 35) */
            COMMENT '4';
            /* CIF PROCEDURECALL (-24, 905), (119, 35) */
            CALL writeln(p2!x)
            /* CIF COMMENT (113, 905), (70, 35) */
            COMMENT '1';
            /* CIF PROCEDURECALL (-24, 955), (118, 35) */
            CALL writeln(p2!y)
            /* CIF COMMENT (114, 955), (70, 35) */
            COMMENT '2';
            /* CIF PROCEDURECALL (-33, 1005), (137, 35) */
            CALL writeln(p1 = p2)
            /* CIF COMMENT (123, 1005), (75, 35) */
            COMMENT 'FALSE';
            /* CIF PROCEDURECALL (-36, 1055), (142, 35) */
            CALL writeln(p1 /= p2)
            /* CIF COMMENT (126, 1055), (71, 35) */
            COMMENT 'TRUE';
            /* CIF PROCEDURECALL (-41, 1105), (152, 35) */
            CALL writeln(length(l1))
            /* CIF COMMENT (131, 1105), (70, 35) */
            COMMENT '3';
            /* CIF PROCEDURECALL (-25, 1155), (120, 35) */
            CALL writeln(l1(0))
            /* CIF COMMENT (115, 1155), (70, 35) */
            COMMENT '5';
            /* CIF PROCEDURECALL (-25, 1207), (120, 35) */
            CALL writeln(l1(1))
            /* CIF COMMENT (115, 1207), (70, 35) */
            COMMENT '6';
            /* CIF PROCEDURECALL (-25, 1257), (120, 35) */
            CALL writeln(l2(0))
            /* CIF COMMENT (115, 1257), (70, 35) */
            COMMENT '5';
            /* CIF PROCEDURECALL (-25, 1307), (120, 35) */
            CALL writeln(l2(1))
            /* CIF COMMENT (115, 1307), (70, 35) */
            COMMENT '6';
            /* CIF PROCEDURECALL (-36, 1357), (142, 35) */
            CALL writeln(l1 = l2)
            /* CIF COMMENT (126, 1357), (71, 35) */
            COMMENT 'TRUE';
            /* CIF PROCEDURECALL (-34, 1407), (138, 35) */
            CALL writeln(l1 /= l2)
            /* CIF COMMENT (124, 1407), (75, 35) */
            COMMENT 'FALSE';
            /* CIF TASK (-9, 1457), (89, 35) */
            TASK l1(0) := 7;
            /* CIF TASK (-9, 1508), (89, 35) */
            TASK l1(1) := 8;
            /* CIF PROCEDURECALL (-25, 1558), (120, 35) */
            CALL writeln(l1(0))
            /* CIF COMMENT (115, 1558), (70, 35) */
            COMMENT '7';
            /* CIF PROCEDURECALL (-25, 1608), (120, 35) */
            CALL writeln(l1(1))
            /* CIF COMMENT (115, 1608), (70, 35) */
            COMMENT '8';
            /* CIF PROCEDURECALL (-25, 1658), (120, 35) */
            CALL writeln(l2(0))
            /* CIF COMMENT (115, 1658), (70, 35) */
            COMMENT '5';
            /* CIF PROCEDURECALL (-25, 1708), (120, 35) */
            CALL writeln(l2(1))
            /* CIF COMMENT (115, 1708), (70, 35) */
            COMMENT '6';
            /* CIF PROCEDURECALL (-36, 1758), (142, 35) */
            CALL writeln(l1 = l2)
            /* CIF COMMENT (126, 1758), (75, 35) */
            COMMENT 'FALSE';
            /* CIF PROCEDURECALL (-34, 1808), (138, 35) */
            CALL writeln(l1 /= l2)
            /* CIF COMMENT (124, 1808), (71, 35) */
            COMMENT 'TRUE';
            /* CIF PROCEDURECALL (-29, 1858), (129, 35) */
            CALL writeln(8 in l1)
            /* CIF COMMENT (119, 1858), (71, 35) */
            COMMENT 'TRUE';
            /* CIF PROCEDURECALL (-29, 1908), (129, 35) */
            CALL writeln(8 in l2)
            /* CIF COMMENT (119, 1908), (75, 35) */
            COMMENT 'FALSE';
            /* CIF PROCEDURECALL (-59, 1958), (188, 35) */
            CALL writeln(nested!a!b!c!p!x)
            /* CIF COMMENT (149, 1958), (70, 35) */
            COMMENT '1';
            /* CIF PROCEDURECALL (-59, 2008), (188, 35) */
            CALL writeln(nested!a!b!c!p!y)
            /* CIF COMMENT (149, 2008), (70, 35) */
            COMMENT '2';
            /* CIF TASK (-47, 2058), (165, 35) */
            TASK nested!a!b!c!p!x := 5;
            /* CIF TASK (-47, 2108), (165, 35) */
            TASK nested!a!b!c!p!y := 6;
            /* CIF PROCEDURECALL (-59, 2158), (188, 35) */
            CALL writeln(nested!a!b!c!p!x)
            /* CIF COMMENT (149, 2158), (70, 35) */
            COMMENT '5';
            /* CIF PROCEDURECALL (-59, 2209), (188, 35) */
            CALL writeln(nested!a!b!c!p!y)
            /* CIF COMMENT (149, 2209), (70, 35) */
            COMMENT '6';
            /* CIF PROCEDURECALL (-87, 2259), (244, 35) */
            CALL writeln(nested!a!b!c!l(0))
            /* CIF COMMENT (177, 2259), (70, 35) */
            COMMENT '3';
            /* CIF PROCEDURECALL (-87, 2309), (244, 35) */
            CALL writeln(nested!a!b!c!l(1))
            /* CIF COMMENT (177, 2309), (70, 35) */
            COMMENT '4';
            /* CIF TASK (-44, 2359), (159, 35) */
            TASK nested!a!b!c!l(0) := 7;
            /* CIF TASK (-44, 2409), (159, 35) */
            TASK nested!a!b!c!l(1) := 8;
            /* CIF PROCEDURECALL (-87, 2460), (244, 35) */
            CALL writeln(nested!a!b!c!l(0))
            /* CIF COMMENT (177, 2460), (70, 35) */
            COMMENT '7';
            /* CIF PROCEDURECALL (-87, 2510), (244, 35) */
            CALL writeln(nested!a!b!c!l(1))
            /* CIF COMMENT (177, 2510), (70, 35) */
            COMMENT '8';
            /* CIF PROCEDURECALL (-46, 2560), (162, 35) */
            CALL writeln(2 in {1, 2, 3})
            /* CIF COMMENT (136, 2560), (71, 35) */
            COMMENT 'TRUE';
            /* CIF PROCEDURECALL (-46, 2610), (162, 35) */
            CALL writeln(4 in {1, 2, 3})
            /* CIF COMMENT (136, 2610), (75, 35) */
            COMMENT 'FALSE';
            /* CIF NEXTSTATE (0, 2660), (70, 35) */
            NEXTSTATE Wait;
    ENDSTATE;
ENDPROCESS sequences;