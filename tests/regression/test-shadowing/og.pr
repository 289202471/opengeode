system og;
    /* CIF TEXT (160, 221), (287, 188) */
    -- Text area for declarations and comments
    
    use dv comment 'dataview-uniq.asn';
    
    signal doSomething;
    /* CIF ENDTEXT */
    channel c
        from env to og with doSomething;
    endchannel;
    block og;
        signalroute r
            from env to og with doSomething;
        connect c and r;
        /* CIF PROCESS (225, 49), (150, 75) */
        process og;
            state NestedState;
            substructure
                out (getOut);
                    /* CIF TEXT (80, 232), (368, 113) */
                    -- Declare a variable with the same name as the level above
                    dcl toto MySeq := { a FALSE, b 2 };
                    
                    -- Declare a non-shadowing variable
                    dcl tutu MySeq := { a TRUE, b 8 };
                    
                    dcl ghost MyInt := 3;
                    /* CIF ENDTEXT */
                    /* CIF START (747, 207), (70, 35) */
                    START;
                        /* CIF PROCEDURECALL (565, 262), (433, 35) */
                        call writeln ('Entering state with ', toto.a, toto.b, ' (should be FALSE 2)' );
                        /* CIF task (733, 317), (98, 53) */
                        task toto := toto,
tutu := tutu,
ghost := 4;
                        /* CIF PROCEDURECALL (577, 400), (410, 35) */
                        call writeln ('Value should be the same:  ', toto.a, toto.b);
                        /* CIF task (705, 455), (153, 53) */
                        task toto.a := TRUE,
toto.b := 3,
toto := { a FALSE, b 4 };
                        /* CIF task (705, 528), (153, 53) */
                        task tutu.a := TRUE;
                        /* CIF PROCEDURECALL (577, 596), (410, 35) */
                        call writeln ('Value should be (FALSE 4) :  ', toto.a, toto.b);
                        /* CIF return (764, 651), (35, 35) */
                        return getOut;
            endsubstructure;
            /* CIF TEXT (57, 58), (287, 140) */
            dcl toto MySeq;
            
            dcl ghost MySeq;
            /* CIF ENDTEXT */
            /* CIF START (475, 177), (70, 35) */
            START;
                /* CIF NEXTSTATE (475, 227), (70, 35) */
                NEXTSTATE wait;
            /* CIF state (455, 392), (109, 35) */
            state NestedState;
                /* CIF connect (510, 447), (0, 35) */
                connect getOut;
                    /* CIF NEXTSTATE (475, 502), (70, 35) */
                    NEXTSTATE Wait;
            endstate;
            /* CIF state (475, 227), (70, 35) */
            state wait;
                /* CIF input (457, 282), (105, 35) */
                input doSomething;
                    /* CIF task (434, 337), (150, 35) */
                    task toto := { a TRUE, b 1 };
                    /* CIF NEXTSTATE (455, 392), (109, 35) */
                    NEXTSTATE NestedState;
            endstate;
        endprocess og;
    endblock;
endsystem;