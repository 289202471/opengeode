/* CIF PROCESS (297, 59), (150, 75) */
PROCESS orchestrator
/* CIF COMMENT (407, 195), (78, 35) */
COMMENT 'Hello';
    STATE wait;
    SUBSTRUCTURE
            /* CIF START (116, 38), (70, 35) */
            START;
                /* CIF NEXTSTATE (88, 88), (124, 35) */
                NEXTSTATE entering_wait;
            /* CIF STATE (83, 193), (134, 35) */
            STATE waiting_in_wait;
                /* CIF INPUT (114, 248), (73, 35) */
                INPUT other;
                    /* CIF NEXTSTATE (83, 298), (134, 35) */
                    NEXTSTATE entering_wait;
            ENDSTATE;
            /* CIF STATE (88, 88), (124, 35) */
            STATE entering_wait;
                /* CIF INPUT (114, 143), (73, 35) */
                INPUT other;
                    /* CIF NEXTSTATE (83, 193), (134, 35) */
                    NEXTSTATE waiting_in_wait;
            ENDSTATE;
    ENDSUBSTRUCTURE;
    /* CIF TEXT (0, 138), (448, 448) */
    dcl seq tastE_Peek_id_list := { 1,2,3,4,5};

dcl a myEnum;

dcl fixed fixedIntList := { 1,2,3};

dcl anInt T_UInt32 :=0;

dcl simpleseq MySimpleSeq := {a 42, b true, c three};

timer myTimer;


procedure VDM comment '#hello';
   fpar in inp fixedIntList,
             in/out outp fixedIntList;
external comment '#vdm #classname=RemoteCall';

procedure VDM2;
   fpar in inp T_Uint32,
             in/out outp MySimpleSeq;
external comment '#vdm #classname=RemoteCall';
    /* CIF ENDTEXT */
    /* CIF START (1081, 150), (80, 36) */
    START;
        /* CIF NEXTSTATE (1085, 201), (72, 34) */
        NEXTSTATE Wait;
    /* CIF STATE (1670, 345), (74, 35) */
    STATE next;
        /* CIF INPUT (1643, 400), (122, 35) */
        INPUT pulse(a);
            /* CIF PROCEDURECALL (1597, 450), (213, 35) */
            CALL reset_timer(mytimer);
            /* CIF NEXTSTATE (1669, 500), (70, 35) */
            NEXTSTATE wait;
    ENDSTATE;
    /* CIF STATE (1664, 125), (100, 35) */
    STATE timeout;
        /* CIF INPUT (1649, 180), (147, 35) */
        INPUT Paramless_TC;
            /* CIF PROCEDURECALL (1598, 230), (249, 35) */
            CALL SET_timer(1000, mytimer);
            /* CIF NEXTSTATE (1685, 280), (74, 35) */
            NEXTSTATE next;
    ENDSTATE;
    /* CIF STATE (1085, 201), (72, 34) */
    STATE Wait;
        /* CIF INPUT (797, 255), (101, 35) */
        INPUT pulse(a);
            /* CIF TASK (762, 305), (170, 48) */
            TASK seq := {0,1,0,1,0},
anint := 478;
            /* CIF PROCEDURECALL (718, 368), (259, 35) */
            CALL writeln('Input param', anint);
            /* CIF PROCEDURECALL (728, 418), (238, 35) */
            CALL ExternalProc(anint, anint);
            /* CIF PROCEDURECALL (710, 468), (275, 35) */
            CALL writeln('Output param', anint);
            /* CIF PROCEDURECALL (704, 518), (286, 35) */
            CALL write('Calling VDM with data');
            /* CIF TASK (654, 568), (386, 48) */
            TASK for each in fixed: call write(each, ' '); endfor;
            /* CIF PROCEDURECALL (762, 631), (170, 40) */
            CALL writeln('');
            /* CIF PROCEDURECALL (761, 686), (172, 35) */
            CALL vdm(fixed, fixed);
            /* CIF PROCEDURECALL (762, 736), (170, 40) */
            CALL write('Result:');
            /* CIF TASK (656, 791), (383, 35) */
            TASK for each in fixed: call write(each, ' '); endfor;
            /* CIF PROCEDURECALL (789, 841), (116, 40) */
            CALL writeln('');
            /* CIF PROCEDURECALL (657, 896), (381, 35) */
            CALL writeln('Calling VDM2 with value', fixed(0));
            /* CIF PROCEDURECALL (726, 946), (242, 35) */
            CALL vdm2(fixed(0), simpleseq);
            /* CIF PROCEDURECALL (592, 996), (511, 40) */
            CALL writeln('Result:', simpleseq!a, ' ', simpleseq!b, ' ', simpleseq!c);
            /* CIF OUTPUT (778, 1051), (138, 35) */
            OUTPUT telemetry(a);
            /* CIF OUTPUT (774, 1101), (147, 35) */
            OUTPUT peek_list(seq);
            /* CIF OUTPUT (759, 1151), (177, 35) */
            OUTPUT peek_fixed(fixed);
            /* CIF NEXTSTATE (810, 1201), (74, 35) */
            NEXTSTATE next;
        /* CIF INPUT (1209, 255), (147, 35) */
        INPUT Paramless_TC;
            /* CIF PROCEDURECALL (1156, 305), (253, 35) */
            CALL writeln('Got Paramless TC');
            /* CIF PROCEDURECALL (1158, 355), (249, 35) */
            CALL SET_timer(1000, mytimer);
            /* CIF OUTPUT (1207, 405), (150, 35) */
            OUTPUT Paramless_TM;
            /* CIF TASK (1181, 455), (202, 35) */
            TASK anint := (anint + 1) mod 100;
            /* CIF NEXTSTATE (1247, 505), (70, 35) */
            NEXTSTATE wait;
        /* CIF INPUT (1419, 255), (104, 35) */
        INPUT mytimer;
            /* CIF NEXTSTATE (1420, 305), (102, 35) */
            NEXTSTATE Timeout;
    ENDSTATE;
ENDPROCESS orchestrator;