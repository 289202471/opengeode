--------------------------------------------------------
--! File generated by asn2aadl v2.1.10: DO NOT EDIT !
--------------------------------------------------------
--! InputASN1FileChecksum:30bf8e519918a4fc37974dfb7e079621:/media/sf_s1/home/andres/esa/taste/opengeode/tests/regression/test-simu/dataview-uniq.asn:
--------------------------------------------------------

package DataView

public

DATA MyEnum
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/media/sf_s1/home/andres/esa/taste/opengeode/tests/regression/test-simu/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MyEnum";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END MyEnum;

DATA MyEnum_Buffer_Max
END MyEnum_Buffer_Max;

DATA IMPLEMENTATION MyEnum_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MyEnum
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END MyEnum_Buffer_Max.impl;

DATA MyEnum_Buffer
END MyEnum_Buffer;

DATA IMPLEMENTATION MyEnum_Buffer.impl
    -- Buffer to hold a marshalled data of type MyEnum
SUBCOMPONENTS
    Buffer : data MyEnum_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MyEnum_Buffer.impl;

DATA MySeq
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/media/sf_s1/home/andres/esa/taste/opengeode/tests/regression/test-simu/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 12; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MySeq";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END MySeq;

DATA MySeq_Buffer_Max
END MySeq_Buffer_Max;

DATA IMPLEMENTATION MySeq_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MySeq
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END MySeq_Buffer_Max.impl;

DATA MySeq_Buffer
END MySeq_Buffer;

DATA IMPLEMENTATION MySeq_Buffer.impl
    -- Buffer to hold a marshalled data of type MySeq
SUBCOMPONENTS
    Buffer : data MySeq_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MySeq_Buffer.impl;

DATA FixedIntList
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/media/sf_s1/home/andres/esa/taste/opengeode/tests/regression/test-simu/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 24; suggested aligned message buffer is...
    Source_Data_Size => 24 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "FixedIntList";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END FixedIntList;

DATA FixedIntList_Buffer_Max
END FixedIntList_Buffer_Max;

DATA IMPLEMENTATION FixedIntList_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type FixedIntList
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (24); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END FixedIntList_Buffer_Max.impl;

DATA FixedIntList_Buffer
END FixedIntList_Buffer;

DATA IMPLEMENTATION FixedIntList_Buffer.impl
    -- Buffer to hold a marshalled data of type FixedIntList
SUBCOMPONENTS
    Buffer : data FixedIntList_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END FixedIntList_Buffer.impl;

DATA TASTE_Peek_id
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/media/sf_s1/home/andres/esa/taste/opengeode/tests/regression/test-simu/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "TASTE-Peek-id";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END TASTE_Peek_id;

DATA TASTE_Peek_id_Buffer_Max
END TASTE_Peek_id_Buffer_Max;

DATA IMPLEMENTATION TASTE_Peek_id_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type TASTE_Peek_id
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END TASTE_Peek_id_Buffer_Max.impl;

DATA TASTE_Peek_id_Buffer
END TASTE_Peek_id_Buffer;

DATA IMPLEMENTATION TASTE_Peek_id_Buffer.impl
    -- Buffer to hold a marshalled data of type TASTE_Peek_id
SUBCOMPONENTS
    Buffer : data TASTE_Peek_id_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END TASTE_Peek_id_Buffer.impl;

DATA MyChoice
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/media/sf_s1/home/andres/esa/taste/opengeode/tests/regression/test-simu/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MyChoice";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aCHOICE;
END MyChoice;

DATA MyChoice_Buffer_Max
END MyChoice_Buffer_Max;

DATA IMPLEMENTATION MyChoice_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MyChoice
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END MyChoice_Buffer_Max.impl;

DATA MyChoice_Buffer
END MyChoice_Buffer;

DATA IMPLEMENTATION MyChoice_Buffer.impl
    -- Buffer to hold a marshalled data of type MyChoice
SUBCOMPONENTS
    Buffer : data MyChoice_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MyChoice_Buffer.impl;

DATA MySeqOf
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/media/sf_s1/home/andres/esa/taste/opengeode/tests/regression/test-simu/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 32; suggested aligned message buffer is...
    Source_Data_Size => 32 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MySeqOf";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END MySeqOf;

DATA MySeqOf_Buffer_Max
END MySeqOf_Buffer_Max;

DATA IMPLEMENTATION MySeqOf_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MySeqOf
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (32); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END MySeqOf_Buffer_Max.impl;

DATA MySeqOf_Buffer
END MySeqOf_Buffer;

DATA IMPLEMENTATION MySeqOf_Buffer.impl
    -- Buffer to hold a marshalled data of type MySeqOf
SUBCOMPONENTS
    Buffer : data MySeqOf_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MySeqOf_Buffer.impl;

DATA TASTE_Peek_id_list
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/media/sf_s1/home/andres/esa/taste/opengeode/tests/regression/test-simu/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 88; suggested aligned message buffer is...
    Source_Data_Size => 88 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "TASTE-Peek-id-list";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END TASTE_Peek_id_list;

DATA TASTE_Peek_id_list_Buffer_Max
END TASTE_Peek_id_list_Buffer_Max;

DATA IMPLEMENTATION TASTE_Peek_id_list_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type TASTE_Peek_id_list
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (88); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END TASTE_Peek_id_list_Buffer_Max.impl;

DATA TASTE_Peek_id_list_Buffer
END TASTE_Peek_id_list_Buffer;

DATA IMPLEMENTATION TASTE_Peek_id_list_Buffer.impl
    -- Buffer to hold a marshalled data of type TASTE_Peek_id_list
SUBCOMPONENTS
    Buffer : data TASTE_Peek_id_list_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END TASTE_Peek_id_list_Buffer.impl;

DATA MySimpleSeq
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/media/sf_s1/home/andres/esa/taste/opengeode/tests/regression/test-simu/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 16; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MySimpleSeq";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END MySimpleSeq;

DATA MySimpleSeq_Buffer_Max
END MySimpleSeq_Buffer_Max;

DATA IMPLEMENTATION MySimpleSeq_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MySimpleSeq
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END MySimpleSeq_Buffer_Max.impl;

DATA MySimpleSeq_Buffer
END MySimpleSeq_Buffer;

DATA IMPLEMENTATION MySimpleSeq_Buffer.impl
    -- Buffer to hold a marshalled data of type MySimpleSeq
SUBCOMPONENTS
    Buffer : data MySimpleSeq_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MySimpleSeq_Buffer.impl;

DATA MySetOf
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/media/sf_s1/home/andres/esa/taste/opengeode/tests/regression/test-simu/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 32; suggested aligned message buffer is...
    Source_Data_Size => 32 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MySetOf";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END MySetOf;

DATA MySetOf_Buffer_Max
END MySetOf_Buffer_Max;

DATA IMPLEMENTATION MySetOf_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MySetOf
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (32); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END MySetOf_Buffer_Max.impl;

DATA MySetOf_Buffer
END MySetOf_Buffer;

DATA IMPLEMENTATION MySetOf_Buffer.impl
    -- Buffer to hold a marshalled data of type MySetOf
SUBCOMPONENTS
    Buffer : data MySetOf_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MySetOf_Buffer.impl;

DATA T_UInt32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/media/sf_s1/home/andres/esa/taste/opengeode/tests/regression/test-simu/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt32";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_UInt32;

DATA T_UInt32_Buffer_Max
END T_UInt32_Buffer_Max;

DATA IMPLEMENTATION T_UInt32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_UInt32_Buffer_Max.impl;

DATA T_UInt32_Buffer
END T_UInt32_Buffer;

DATA IMPLEMENTATION T_UInt32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt32
SUBCOMPONENTS
    Buffer : data T_UInt32_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UInt32_Buffer.impl;

end DataView;
