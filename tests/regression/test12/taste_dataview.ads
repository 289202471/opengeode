-- Code automatically generated by asn1scc tool
WITH adaasn1rtl; use type adaasn1rtl.Asn1UInt; use type adaasn1rtl.Asn1Int;use type adaasn1rtl.BIT;
WITH TASTE_BasicTypes;
--# inherit adaasn1rtl,TASTE_BasicTypes;


PACKAGE TASTE_Dataview
IS


-----------------------------------------------------------asn1SccLight-------------------------------------------------------------
SUBTYPE asn1SccLight_index_range is integer range 0..3;
TYPE asn1SccLight IS (asn1Sccred, asn1Sccyellow, asn1Sccgreen, asn1Sccall_off);
for asn1SccLight use
    (asn1Sccred => 0, asn1Sccyellow => 1, asn1Sccgreen => 2, asn1Sccall_off => 3);
for asn1SccLight'Size use 32;

asn1SccLight_REQUIRED_BYTES_FOR_ENCODING:CONSTANT INTEGER := 1;
asn1SccLight_REQUIRED_BITS_FOR_ENCODING:CONSTANT INTEGER := 2;
asn1SccLight_REQUIRED_BYTES_FOR_ACN_ENCODING:CONSTANT INTEGER := 1;
asn1SccLight_REQUIRED_BITS_FOR_ACN_ENCODING:CONSTANT INTEGER := 2;
asn1SccLight_REQUIRED_BYTES_FOR_XER_ENCODING:CONSTANT INTEGER :=  0;

FUNCTION asn1SccLight_Init return asn1SccLight;
---# derives val from;
FUNCTION asn1SccLight_Equal(val1, val2: in asn1SccLight) return Boolean;


ERR_asn1SccLight_unknown_enumeration_value:CONSTANT INTEGER := 1005; -- 


 

private
   --# hide TASTE_Dataview;


END TASTE_Dataview;