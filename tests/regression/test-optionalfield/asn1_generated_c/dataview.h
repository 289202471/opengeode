#ifndef GENERATED_ASN1SCC_DATAVIEW_H
#define GENERATED_ASN1SCC_DATAVIEW_H
/*
Code automatically generated by asn1scc tool
*/
#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif



typedef struct {
    flag thanassis;
} asn1SccSeqDef_d;

#define asn1SccSeqDef_d_REQUIRED_BYTES_FOR_ENCODING       1 
#define asn1SccSeqDef_d_REQUIRED_BITS_FOR_ENCODING        1
#define asn1SccSeqDef_d_REQUIRED_BYTES_FOR_ACN_ENCODING   1 
#define asn1SccSeqDef_d_REQUIRED_BITS_FOR_ACN_ENCODING    1
#define asn1SccSeqDef_d_REQUIRED_BYTES_FOR_XER_ENCODING   57

void asn1SccSeqDef_d_Initialize(asn1SccSeqDef_d* pVal);
flag asn1SccSeqDef_d_IsConstraintValid(const asn1SccSeqDef_d* val, int* pErrCode);


typedef asn1SccUint asn1SccSeqDef_c;

#define asn1SccSeqDef_c_REQUIRED_BYTES_FOR_ENCODING       1 
#define asn1SccSeqDef_c_REQUIRED_BITS_FOR_ENCODING        8
#define asn1SccSeqDef_c_REQUIRED_BYTES_FOR_ACN_ENCODING   1 
#define asn1SccSeqDef_c_REQUIRED_BITS_FOR_ACN_ENCODING    8
#define asn1SccSeqDef_c_REQUIRED_BYTES_FOR_XER_ENCODING   41

void asn1SccSeqDef_c_Initialize(asn1SccSeqDef_c* pVal);
flag asn1SccSeqDef_c_IsConstraintValid(const asn1SccSeqDef_c* val, int* pErrCode);
#ifndef ERR_asn1SccSeqDef_c 
#define ERR_asn1SccSeqDef_c		1001  /*(8 .. 255)*/
#endif

typedef asn1SccUint asn1SccSeqDef_b;

#define asn1SccSeqDef_b_REQUIRED_BYTES_FOR_ENCODING       1 
#define asn1SccSeqDef_b_REQUIRED_BITS_FOR_ENCODING        4
#define asn1SccSeqDef_b_REQUIRED_BYTES_FOR_ACN_ENCODING   1 
#define asn1SccSeqDef_b_REQUIRED_BITS_FOR_ACN_ENCODING    4
#define asn1SccSeqDef_b_REQUIRED_BYTES_FOR_XER_ENCODING   41

void asn1SccSeqDef_b_Initialize(asn1SccSeqDef_b* pVal);
flag asn1SccSeqDef_b_IsConstraintValid(const asn1SccSeqDef_b* val, int* pErrCode);
#ifndef ERR_asn1SccSeqDef_b 
#define ERR_asn1SccSeqDef_b		1002  /*(10 .. 20)*/
#endif

typedef struct {
    flag a;
    asn1SccSeqDef_b b;
    asn1SccSeqDef_c c;
    asn1SccSeqDef_d d;
    struct {
        unsigned int a:1;
        unsigned int b:1;
        unsigned int d:1;
    } exist;
} asn1SccSeqDef;

#define asn1SccSeqDef_REQUIRED_BYTES_FOR_ENCODING       3 
#define asn1SccSeqDef_REQUIRED_BITS_FOR_ENCODING        17
#define asn1SccSeqDef_REQUIRED_BYTES_FOR_ACN_ENCODING   3 
#define asn1SccSeqDef_REQUIRED_BITS_FOR_ACN_ENCODING    17
#define asn1SccSeqDef_REQUIRED_BYTES_FOR_XER_ENCODING   134

void asn1SccSeqDef_Initialize(asn1SccSeqDef* pVal);
flag asn1SccSeqDef_IsConstraintValid(const asn1SccSeqDef* val, int* pErrCode);


typedef struct {
    flag b_C;
    struct {
        unsigned int b_C:1;
    } exist;
} asn1SccSeq_b;

#define asn1SccSeq_b_REQUIRED_BYTES_FOR_ENCODING       1 
#define asn1SccSeq_b_REQUIRED_BITS_FOR_ENCODING        2
#define asn1SccSeq_b_REQUIRED_BYTES_FOR_ACN_ENCODING   1 
#define asn1SccSeq_b_REQUIRED_BITS_FOR_ACN_ENCODING    2
#define asn1SccSeq_b_REQUIRED_BYTES_FOR_XER_ENCODING   39

void asn1SccSeq_b_Initialize(asn1SccSeq_b* pVal);
flag asn1SccSeq_b_IsConstraintValid(const asn1SccSeq_b* val, int* pErrCode);


typedef struct {
    flag a;
    asn1SccSeq_b b;
    struct {
        unsigned int a:1;
        unsigned int b:1;
    } exist;
} asn1SccSeq;

#define asn1SccSeq_REQUIRED_BYTES_FOR_ENCODING       1 
#define asn1SccSeq_REQUIRED_BITS_FOR_ENCODING        5
#define asn1SccSeq_REQUIRED_BYTES_FOR_ACN_ENCODING   1 
#define asn1SccSeq_REQUIRED_BITS_FOR_ACN_ENCODING    5
#define asn1SccSeq_REQUIRED_BYTES_FOR_XER_ENCODING   62

void asn1SccSeq_Initialize(asn1SccSeq* pVal);
flag asn1SccSeq_IsConstraintValid(const asn1SccSeq* val, int* pErrCode);


 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */






 


#ifdef  __cplusplus
}

#endif

#endif
