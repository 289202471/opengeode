PROCESS fce;
/* CIF TEXT (-2987, -677), (442, 584) */
-- Declaration of variables stored in RAM

DCL eeprom FCE_SGM_EEPROM;

DCL sgm_ram FCE_SGM_RAM;

DCL fdir_enable Bool_ty;

DCL new_rc Counter_ty;

--DCL ground_cmd_reset Bool_ty;

DCL areArraysDeployed Bool_ty;

--DCL ctxt MySeq;

dcl fce_stat_reg FCE_RECOVERY_STATUS_REGISTER;

dcl fce_ctrl_reg FCE_CONTROL_FLAGS_STATUS_REGISTER;

dcl op_param Bool_ty;

-- FCE Selected should be returned by the FCE Selected Determination
-- procedure (FCESW-3332) but I have no visibility on this procedure
-- (see Figure 6-5)
dcl fce_selected Bool_ty;

-- In figure 6.5 there is a test "Fce selected and
-- arr_dep = true two consecutive times".
DCL fce_selected_counter Counter_ty;

-- Fig 6-7, FCE Stop control asserted

DCL FCE_Stop_Control Bool_ty;

-- As defined in Figure 6-6
TIMER mmo_sep_check_delay;
/* CIF ENDTEXT */
/* CIF TEXT (-2987, -85), (320, 142) */
-- The task of the FCE is to serve as a backup
-- for S/C attitude control

-- The FCE SW is designed to be independent
-- from the OBC CSW to prevent any failure
-- propagation from OBC to FCE
/* CIF ENDTEXT */
/* CIF PROCEDURE (-2979, 141), (135, 64) */
PROCEDURE Bootup_actions;
/* CIF TEXT (-756, -341), (387, 130) */
fpar in/out
    eeprom FCE_SGM_EEPROM;
/* CIF ENDTEXT */
/* CIF START (-261, -338), (100, 50) */
START;
/* CIF TASK (-352, -273), (283, 50) */
TASK eeprom!sit_4!ground_cmd_reset := false;
/* CIF PROCEDURECALL (-323, -208), (225, 50) */
CALL set_fce_sgm_eeprom(eeprom);
/* CIF PROCEDURECALL (-346, -143), (271, 50) */
CALL get_fce_status_register(fce_stat_reg);
/* CIF DECISION (-286, -78), (151, 70) */
DECISION fce_stat_reg!l3rec
/* CIF COMMENT (-118, -77), (244, 68) */
COMMENT 'determine:
- the FDIR trigger level
- the new value of the RC New_RC
- the cause of the boot-up';
/* CIF ANSWER (-531, 12), (100, 35) */
(true):
/* CIF TASK (-587, 62), (212, 50) */
TASK new_rc := eeprom!sit_4!rc + 1
/* CIF COMMENT (-360, 53), (158, 68) */
COMMENT 'Level 3 emergency
May have also been
a second Level 2
triggering';
/* CIF TASK (-595, 127), (229, 113) */
TASK 'Add to data pool:
status register, new_rc',
'clear registers l2rec and
r3rec by use of the recovery
control register',
'generate event to store these
data in SKEL'
/* CIF COMMENT (-346, 158), (176, 50) */
COMMENT 'TODO - these
actions are in table 6-1';
/* CIF TASK (-577, 255), (192, 50) */
TASK eeprom!sit_4!rc := new_rc;
/* CIF ANSWER (50, 12), (100, 35) */
(false):
/* CIF DECISION (21, 62), (158, 70) */
DECISION fce_stat_reg!l2rec;
/* CIF ANSWER (-105, 152), (100, 35) */
(true):
/* CIF TASK (-161, 202), (212, 50) */
TASK new_rc := eeprom!sit_4!rc
/* CIF COMMENT (67, 210), (180, 33) */
COMMENT 'First Level2 Emergency';
/* CIF TASK (-169, 267), (229, 98) */
TASK 'Write in data pool',
'clear registers l2rec and
r3rec by use of the recovery
control register',
'generate event to store these
data in SKEL'
/* CIF COMMENT (75, 291), (176, 50) */
COMMENT 'TODO - these
actions are in table 6-1';
/* CIF ANSWER (313, 152), (100, 35) */
(false):
/* CIF TASK (257, 202), (212, 50) */
TASK new_rc := eeprom!sit_4!rc
/* CIF COMMENT (485, 210), (124, 33) */
COMMENT 'FCE Switch-on';
/* CIF TASK (284, 267), (158, 50) */
TASK 'Write in data pool'
/* CIF COMMENT (462, 267), (176, 50) */
COMMENT 'TODO - these
actions are in table 6-1';
ENDDECISION;
ENDDECISION;
/* CIF PROCEDURECALL (-352, 395), (283, 50) */
CALL get_fce_ctrl_stat_register(fce_ctrl_reg);
/* CIF DECISION (-330, 460), (238, 70) */
DECISION fce_ctrl_reg!reference_pattern;
/* CIF ANSWER (-56, 550), (100, 35) */
(nok):
/* CIF TASK (-111, 600), (210, 50) */
TASK 'Evaluate arr_dep_flag
from the other RM register'
/* CIF COMMENT (119, 598), (180, 53) */
COMMENT 'XXX
Not clear what register
we have to read';
/* CIF ANSWER (-377, 550), (100, 35) */
(ok):
/* CIF DECISION (-424, 600), (194, 70) */
DECISION fce_ctrl_reg!arr_dep_flag;
/* CIF ANSWER (-490, 690), (100, 35) */
(majority):
/* CIF TASK (-542, 740), (205, 50) */
TASK areArraysDeployed :=TRUE;
/* CIF ANSWER (-275, 690), (100, 35) */
ELSE:
/* CIF TASK (-329, 740), (208, 50) */
TASK areArraysDeployed :=FALSE;
ENDDECISION;
ENDDECISION;
/* CIF TASK (-327, 820), (233, 50) */
TASK 'Provide all results to data pool'
/* CIF COMMENT (-75, 820), (251, 50) */
COMMENT 'XXX Check Data pool specification';
/* CIF STOP (-236, 885), (50, 50) */
STOP;
ENDPROCEDURE;
/* CIF START (-2260, -682), (100, 50) */
START;
/* CIF LABEL (-2260, -606), (100, 50) */
FCE_INIT:
/* CIF TASK (-2320, -541), (221, 53) */
TASK 'FCE internal reconfiguration
according to pointer position',
'Boot-up selected PM';
/* CIF TASK (-2308, -473), (197, 50) */
TASK 'Disable TM/TC reception';
/* CIF TASK (-2350, -408), (281, 83) */
TASK 'Start WD refreshing',
'Validity check of SGM RAM',
'Save last boot report to SGM-RAM',
'OBT validity check/restore with LLOBT',
'Enable_HW_Sync_to_PPS_for_2_sec'
/* CIF COMMENT (-2046, -390), (238, 48) */
COMMENT 'What to do if validity check fails?';
/* CIF PROCEDURECALL (-2295, -310), (171, 50) */
CALL get_fce_sgm_eeprom
(eeprom)
/* CIF COMMENT (-2096, -310), (187, 50) */
COMMENT 'If read fails for all 4 SGM,
use default SIT';
/* CIF PROCEDURECALL (-2280, -245), (140, 50) */
CALL Bootup_actions
(eeprom)
/* CIF COMMENT (-2126, -252), (304, 63) */
COMMENT 'Retrieve RSR, determine FDIR trigger level,
NEW_RC, cause of the boot-up, and perform
the corresponding actions (table 6-1)';
/* CIF DECISION (-2263, -180), (107, 70) */
DECISION new_rc >= 5;
/* CIF ANSWER (-2477, -90), (93, 35) */
(FALSE):
/* CIF TASK (-2506, -35), (151, 50) */
TASK fdir_enable := true
/* CIF COMMENT (-2336, -35), (132, 50) */
COMMENT 'No FDIR Level 4';
/* CIF PROCEDURECALL (-2534, 30), (208, 50) */
CALL get_fce_sgm_ram(sgm_ram)
/* CIF COMMENT (-2307, 30), (136, 50) */
COMMENT 'Get LLAT, LLARE';
/* CIF ANSWER (-1857, -90), (100, 35) */
(TRUE):
/* CIF TASK (-1884, -40), (154, 50) */
TASK fdir_enable := false
/* CIF COMMENT (-1704, -46), (112, 61) */
COMMENT 'FDIR Level 4';
/* CIF PROCEDURECALL (-1911, 25), (208, 50) */
CALL get_fce_sgm_ram(sgm_ram)
/* CIF COMMENT (-1681, 23), (163, 53) */
COMMENT 'According to FI-0011
Use default values if
SGM reads fail';
ENDDECISION;
/* CIF TASK (-2385, 95), (350, 50) */
TASK 'Start nominal SpW link acc. SIT1',
'Start normal HK TM generation and routing to OBC';
/* CIF TASK (-2329, 160), (239, 50) */
TASK 'further FCESW startup activities'
/* CIF COMMENT (-2031, 160), (149, 50) */
COMMENT 'details tbd by asf
see 1.2';
/* CIF TASK (-2310, 225), (200, 50) */
TASK 'Enable_TC_TM_Reception';
/* CIF JOIN (-2235, 290), (50, 50) */
JOIN to_sbm;
/* CIF LABEL (1083, 78), (144, 50) */
CONNECTION control_to_ready:
/* CIF TASK (1087, 143), (136, 50) */
TASK 'huge transition'
/* CIF COMMENT (1243, 143), (147, 50) */
COMMENT 'TODO (Figure 6-7)';
/* CIF NEXTSTATE (1105, 208), (100, 50) */
NEXTSTATE Ready;
/* CIF End Label */
ENDCONNECTION;
/* CIF LABEL (615, 71), (152, 50) */
CONNECTION ready_to_control:
/* CIF TASK (549, 136), (284, 53) */
TASK 'stop sending packets to OBC, but
continue generation of normal HK+AOCS
packets'
/* CIF COMMENT (847, 105), (223, 93) */
COMMENT '(in Figure 6-5)
This seems inconsistent
normal HK are sent to OBC
so where should we "continue"
sending them? XXX';
/* CIF TASK (601, 204), (180, 50) */
TASK 'Stop TM-TC Reception'
/* CIF COMMENT (799, 204), (177, 50) */
COMMENT 'what command is that?
(To whom?) XXX';
/* CIF TASK (614, 269), (154, 50) */
TASK fdir_enable := false;
/* CIF TASK (590, 334), (201, 50) */
TASK areArraysDeployed := true;
/* CIF TASK (609, 399), (163, 50) */
TASK fce_selected := true;
/* CIF NEXTSTATE (641, 464), (100, 50) */
NEXTSTATE Control;
/* CIF End Label */
ENDCONNECTION;
/* CIF LABEL (-1427, -576), (100, 50) */
CONNECTION to_sbm:
/* CIF TASK (-1470, -511), (186, 50) */
TASK 'FCE_AOCS_SBM_CMD'
/* CIF COMMENT (-1267, -513), (197, 53) */
COMMENT 'In 1.2, but what exactly
has to be done here is not
clearly stated XXX';
/* CIF DECISION (-1508, -446), (263, 70) */
DECISION eeprom!sit_4!test_mode_counter = 0;
/* CIF ANSWER (-1502, -356), (110, 35) */
(FALSE):
/* CIF JOIN (-1472, -306), (50, 50) */
JOIN sbm_to_ready;
/* CIF ANSWER (-1347, -356), (100, 35) */
(TRUE):
/* CIF NEXTSTATE (-1364, -301), (134, 50) */
NEXTSTATE FCE_Test_Mode;
ENDDECISION;
/* CIF End Label */
ENDCONNECTION;
/* CIF LABEL (-939, -571), (124, 50) */
CONNECTION sbm_to_ready:
/* CIF TASK (-1009, -506), (265, 50) */
TASK 'fce dms initialisation to READY mode'
/* CIF COMMENT (-727, -508), (206, 53) */
COMMENT 'stop both RIU functions ;
stop SpW links to RIUs
XXX check what to do here';
/* CIF TASK (-952, -441), (151, 50) */
TASK fdir_enable := true
/* CIF COMMENT (-788, -441), (242, 50) */
COMMENT 'Even if it was set to false before?!';
/* CIF DECISION (-1015, -376), (277, 70) */
DECISION eeprom!sit_4!ground_cmd_reset = true
and
fce_stat_reg!l3rec = false;
/* CIF ANSWER (-739, -286), (100, 35) */
(TRUE):
/* CIF LABEL (-781, -236), (185, 82) */
cmd_fce_aocs_to_ready:
/* CIF TASK (-784, -139), (191, 53) */
TASK 'FCE_AOCS_READY_CMD',
'Start FCE_SELECTED
Determination'
/* CIF COMMENT (-580, -139), (344, 53) */
COMMENT 'Not sure what to do here (Figure 6-4)
Do we need to execute the FCE AOCS branch too?';
/* CIF TASK (-787, -71), (196, 50) */
TASK fce_selected_counter := 0
/* CIF COMMENT (-571, -71), (260, 53) */
COMMENT 'Used to count 2 consecutive checks
of FCE Selected and Arr_Dep=true
(cf. Fig 6-5)';
/* CIF NEXTSTATE (-739, -6), (100, 50) */
NEXTSTATE Ready;
/* CIF ANSWER (-1021, -286), (76, 35) */
(FALSE):
/* CIF NEXTSTATE (-1060, -231), (155, 50) */
NEXTSTATE Wait_Attitude_Msg;
ENDDECISION;
/* CIF End Label */
ENDCONNECTION;



/* CIF STATE (2066, -515), (100, 50) */
STATE Control
/* CIF COMMENT (2222, -510), (120, 50) */
COMMENT 'As per Fig 6-6';
/* CIF INPUT (2275, -445), (136, 50) */
INPUT Cyclic_Essential;
/* CIF OUTPUT (2269, -380), (147, 50) */
OUTPUT Essential_Packets;
/* CIF NEXTSTATE (2293, -315), (100, 50) */
NEXTSTATE Control;
/* CIF INPUT (2008, -445), (100, 50) */
INPUT Cyclic_HK;
/* CIF OUTPUT (1993, -380), (129, 50) */
OUTPUT Normal_HK_TM
/* CIF COMMENT (2157, -381), (100, 50) */
COMMENT 'To OBC';
/* CIF NEXTSTATE (2008, -315), (100, 50) */
NEXTSTATE Control;
/* CIF INPUT (1665, -445), (104, 50) */
INPUT Cyclic_FCE;
/* CIF TASK (1611, -380), (211, 50) */
TASK 'Stop control determination';
/* CIF DECISION (1625, -315), (183, 70) */
DECISION FCE_Stop_Control;
/* CIF ANSWER (1842, -225), (100, 35) */
(false):
/* CIF NEXTSTATE (1842, -175), (100, 50) */
NEXTSTATE Control;
/* CIF ANSWER (1474, -225), (100, 35) */
(true):
/* CIF TASK (1436, -175), (176, 50) */
TASK 'FCE_AOCS_STOP_CTR';
/* CIF JOIN (1499, -110), (50, 50) */
JOIN control_to_ready;
ENDDECISION;
ENDSTATE;




/* CIF STATE (605, -558), (100, 50) */
STATE Ready;
/* CIF INPUT (1195, -477), (100, 50) */
INPUT Cyclic_HK
/* CIF COMMENT (1315, -477), (100, 50) */
COMMENT 'Fig 6-4';
/* CIF OUTPUT (1180, -412), (129, 50) */
OUTPUT Normal_HK_TM
/* CIF COMMENT (1342, -412), (100, 50) */
COMMENT 'To OBC';
/* CIF NEXTSTATE (1195, -347), (100, 50) */
NEXTSTATE Ready;
/* CIF INPUT (603, -488), (104, 50) */
INPUT Cyclic_FCE;
/* CIF TASK (588, -423), (133, 50) */
TASK 'FCE_SELECTED'
/* CIF COMMENT (738, -425), (164, 53) */
COMMENT 'As required in Fig 6-4
but no details given';
/* CIF DECISION (540, -358), (230, 70) */
DECISION fce_selected and
areArraysDeployed
/* CIF COMMENT (782, -365), (247, 83) */
COMMENT 'ambiguity in fig 6-5: ARR_DEP
or areArraysDeployed flag?
(ARR_DEP is a set of flags used 
to determine areArraysDeployed,
cf fig 6-1)';
/* CIF ANSWER (793, -268), (100, 35) */
(true):
/* CIF TASK (746, -218), (193, 50) */
TASK fce_selected_counter :=
fce_selected_counter + 1;
/* CIF DECISION (755, -153), (176, 70) */
DECISION fce_selected_counter
= 2;
/* CIF ANSWER (1006, -63), (100, 35) */
(false):
/* CIF NEXTSTATE (1006, -13), (100, 50) */
NEXTSTATE Ready;
/* CIF ANSWER (623, -63), (100, 35) */
(true):
/* CIF JOIN (648, -13), (50, 50) */
JOIN ready_to_control;
ENDDECISION;
/* CIF ANSWER (436, -268), (100, 35) */
(false):
/* CIF TASK (388, -218), (196, 50) */
TASK fce_selected_counter := 0;
/* CIF NEXTSTATE (436, -153), (100, 50) */
NEXTSTATE Ready;
ENDDECISION;
/* CIF INPUT (89, -488), (100, 50) */
INPUT FDIR
/* CIF COMMENT (205, -493), (173, 78) */
COMMENT 'FDIR Processing
(Figure 6-4)
No details given, not
clear what to do? XXX';
/* CIF NEXTSTATE (89, -423), (100, 50) */
NEXTSTATE -;
ENDSTATE;

/* CIF STATE (1119, -254), (134, 50) */
STATE FCE_Test_Mode;
/* CIF INPUT (1127, -184), (117, 50) */
INPUT Upload_Data
(op_param)
/* CIF COMMENT (1261, -198), (165, 78) */
COMMENT 'From operator
in SGM EEPROM/RAM
or PM EEPROM/RAM
TBD';
/* CIF NEXTSTATE (1119, -119), (134, 50) */
NEXTSTATE FCE_Test_Mode;
ENDSTATE;




/* CIF STATE (-1060, -231), (155, 50) */
STATE Wait_Attitude_Msg;
/* CIF INPUT (-1043, -161), (122, 50) */
INPUT Attitude_msg
/* CIF COMMENT (-901, -161), (100, 50) */
COMMENT 'From OBC';
/* CIF JOIN (-1007, -96), (50, 50) */
JOIN cmd_fce_aocs_to_ready;
ENDSTATE;
ENDPROCESS fce;