/* CIF PROCESS (152, 148), (150, 75) */
PROCESS controlflow;
/* CIF TEXT (373, 97), (303, 168) */
-- Declare your variables

-- Syntax: DCL <variable name> <type name>;

DCL n Int32;
DCL b Bool;
DCL l List;
/* CIF ENDTEXT */
/* CIF START (0, 0), (70, 35) */
START;
/* CIF TASK (0, 50), (70, 35) */
TASK n := 0;
/* CIF TASK (-10, 100), (90, 35) */
TASK l := {1, 2};
/* CIF NEXTSTATE (0, 150), (70, 35) */
NEXTSTATE Wait;

/* CIF STATE (0, 150), (70, 35) */
STATE Wait;
/* CIF INPUT (0, 205), (70, 35) */
INPUT run;
/* CIF DECISION (0, 255), (70, 50) */
DECISION b;
/* CIF ANSWER (-61, 325), (73, 24) */
(true):
/* CIF PROCEDURECALL (-83, 364), (118, 35) */
CALL writeln(true);
/* CIF ANSWER (65, 325), (78, 24) */
(false):
/* CIF PROCEDURECALL (42, 364), (122, 35) */
CALL writeln(false);
ENDDECISION;
/* CIF DECISION (0, 414), (70, 50) */
DECISION n;
/* CIF ANSWER (-32, 464), (70, 24) */
(2):
/* CIF PROCEDURECALL (-47, 503), (100, 35) */
CALL writeln(2);
/* CIF ANSWER (-143, 465), (70, 24) */
(1):
/* CIF PROCEDURECALL (-158, 504), (100, 35) */
CALL writeln(1);
/* CIF ANSWER (90, 464), (70, 24) */
else:
/* CIF PROCEDURECALL (62, 503), (124, 35) */
CALL writeln('else');
ENDDECISION;
/* CIF TASK (-48, 554), (167, 56) */
TASK for x in range(10):
    n := (n + x) mod 255
endfor;
/* CIF PROCEDURECALL (-15, 625), (100, 35) */
CALL writeln(n)
/* CIF COMMENT (105, 620), (70, 35) */
COMMENT '45';
/* CIF TASK (0, 675), (70, 35) */
TASK n := 0;
/* CIF TASK (-55, 725), (181, 56) */
TASK for x in range(2, 10, 2):
    n := (n + x) mod 255
endfor;
/* CIF PROCEDURECALL (-15, 796), (100, 35) */
CALL writeln(n)
/* CIF COMMENT (105, 791), (70, 35) */
COMMENT '20';
/* CIF NEXTSTATE (0, 846), (70, 35) */
NEXTSTATE Wait;
ENDSTATE;
ENDPROCESS controlflow;